

[[file:splash.png]]

* What is Emacs

Emacs is

... ~a text editor~
... ~an IDE~
... ~a lisp programming environment~

Some useful keybindings:

~C-x C-f~ "find-file" (Open files)
~C-h ?~ Help for the help
~C-h f~ Help about functions
~C-h v~ Help about variables
~C-h k~ Help for keys
~M-x~ Execute interactive command
~M-:~  Eval elisp (Emacs Lisp)

* A simple example

Insert a newline above the current
line

Let's write an emacs lisp function
to do that.

Bind our function to a key:
#+BEGIN_SRC elisp
(global-set-key
 (kbd "<f10>")
 'my/insert-line
 )
#+END_SRC
* Some terminology

Buffer \in Window \in Frame

*Echo Area*:
special section at bottom of screen
for messages

#+BEGIN_SRC elisp
(message "Hello world")
#+END_SRC

*Minibuffer*:
special buffer for input prompts
typically displayed in the echo area

#+BEGIN_SRC elisp
(read-from-minibuffer
  "Enter message: ")
#+END_SRC

* Buffer Modes

*Major Mode*:
  one per buffer, main mode
  ~python-mode~, ~c-mode~, etc.

*Minor Mode*:
  additional enhancements

  there can be many minor modes
  enabled at the same time

~C-h m~ prints help about current mode

* Emacs Starter Kits

*Prelude*:
  https://prelude.emacsredux.com


*Spacemacs*: https://spacemacs.org
  Popular emacs distribution with
  many features

  Evil-based (Vim keybindings)

*Doom*: GitHub[[ https://github.com/hlissner/doom-emacs][ hlissner/doom-emacs]]
  similar to Spacemacs
  less popular
  faster startup
* Package management

~list-packages~ displays a list of packages

You probably want to add MELPA as package archive:
#+BEGIN_SRC elisp
(require 'package)
(add-to-list
 'package-archives
 (cons "melpa" (concat proto "://melpa.org/packages/"))
 t)
#+END_SRC

Use ~package-install~ to install a new package

Spacemacs and Doom have their own package management, see documentation
* Configure packages

*use-package*: concise way to setup autoloads, keybindings, etc
 https://github.com/jwiegley/use-package

Example:

#+BEGIN_SRC elisp
(use-package eziam-theme
  :defer t
  :init
  (setq-default eziam-scale-headings nil)
  (setq-default eziam-scale-other nil))
#+END_SRC
* Helm and Ivy

Completion frameworks

Provide fuzzy matching and
a nice selection interface

Ivy is simpler, Helm is more mature

#+BEGIN_SRC shell :results output
cd /code/swiper
tokei
#+END_SRC

#+RESULTS:
#+begin_example
-------------------------------------------------------------------------------
 Language            Files        Lines         Code     Comments       Blanks
-------------------------------------------------------------------------------
 Emacs Lisp             14        15792        13490          687         1615
 Makefile                2           45           31            0           14
 Markdown                1          141          141            0            0
 Org                     4         7300         6434            0          866
 Plain Text              2         1125         1125            0            0
-------------------------------------------------------------------------------
 Total                  23        24403        21221          687         2495
-------------------------------------------------------------------------------
#+end_example

* org-mode
"""
/Org mode is for keeping notes,/
/maintaining TODO lists,/
/planning projects,/
/and authoring documents with a/
/fast and effective plain-text system./
"""

Quickly record notes with org-capture
See also org-projectile
* magit

Git interface for emacs

Do all git operations
inside emacs

Easy interactive staging
* undo-tree

Have you ever wanted
to undo undo?

~undo-tree~ represents the
branching structure of undo

Persistent undo is also a
cool feature
* pdf-tools

Smooth pdf rendering

Support synctex and annotations

- jump to source location
- jump to pdf location
* And much more!

- IRC clients
- Web browsers
- Feed readers
- Mail clients
- Games
- TRAMP
- EMMS (Emacs MultiMedia System)

  https://github.com/bennofs/emacs-present/
